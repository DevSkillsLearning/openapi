openapi: 3.0.3
info:
  title: EasyShop Products API definition
  description: |
    # About Us
    ***EasyShop*** is a open market product selling company. Any website can list our products
    by using our _APIs_. Shipping & other logistics can be taken care by us. You will get an 
    `Affiliate commision` for selling our products.
    # Categories Supported
      - Mobiles
         - Apple
         - Samsung
         - OnePlus
      - Laptops
      - Televisions
      - Headphones

  termsOfService: https://easyshop.com/terms/
  contact:
    name: API Support
    url: https://www.easyshop.com/support
    email: support@easyshop.com
  license:
    name: EasyShop License
    url: https://www.easyshop.com/licenses/LICENSES-2.0
  version: 1.0.0
servers:
  - url: https://development.easyshop-server.com/v1
    description: Development Server
  - url: https://staging.easyshop-server.com/v1
    description: Staging Server
  - url: https://api.easyshop-server.com/v1
    description: Production Server
paths:
  /categories:
    get:
      summary: List all categories
      description: Returns the list of categories supported by EasyShop
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          examples:
            Mobiles:
              value: 101
            laptops:
              value: 102
            headphones:
              value: 103
            televisions:
              value: 104
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryId:
                      type: integer
                    name:
                      type: string
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                    - categoryId: 101
                      name: mobiles
                    - categoryId: 102
                      name: Laptops
                    - categoryId: 103
                      name: HeadPhones
                    - categoryId: 104
                      name: Televisions
                single-category-data:
                  summary: Single category example data
                  value:
                    - categoryId: 101
                      name: mobiles
  /categories/{categoryId}:
    get:
      summary: Return the category details
      description: Returns the category from the EasyShop
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
            example: 101
      responses:
        '200':
          description: Return category details
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryId:
                    type: integer
                  name:
                    type: string
  /products:
    get:
      summary: List all products
      description: Returns the list of products supported by EasyShop
      parameters:
        - name: productId
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            example: 1
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                      example: 103
                    name:
                      type: string
                      example: OnePlus 10 pro 5G
                    price:
                      type: number
                      example: 750.00
                    categoryName:
                      type: string
                      example: Mobiles
                    quantity:
                      type: integer
                      description: |
                        ***Quantity*** represents 'stock' value when this field is being sent by EasyShop. Where as in the
                        scenarios of consumer sending this field. it represents 'number of product items' inside the order.
                        Consumers are expected to handle the scenario of stopping the end user <u>*when stock value is 0*</u>
                      example: 63
              examples:
                products-data:
                  summary: Products example data
                  value:
                    - productId: 101
                      name: Apple Iphone 13 pro
                      price: 999.0
                      categoryName: Mobiles
                      quantity: 96
                    - productId: 102
                      name: Samsung S22 Ultra
                      price: 899.0
                      categoryName: Mobiles
                      quantity: 122
                    - productId: 103
                      name: OnePlus 10 pro 5G
                      price: 750.0
                      categoryName: Mobiles
                      quantity: 67
  /products/{productId}:
    get:
      summary: Returns the product details
      description: Returns the product details from the EasyShop
      parameters:
        - name: productId
          in: in
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            example: 2
      responses:
        '200':
          description: Return the product details
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                      example: 103
                    name:
                      type: string
                      example: OnePlus 10 pro 5G
                    price:
                      type: number
                      example: 750.00
                    categoryName:
                      type: string
                      example: Mobiles
                    quantity:
                      type: integer
                      description: |
                        ***Quantity*** represents 'stock' value when this field is being sent by EasyShop. Where as in the
                        scenarios of consumer sending this field. it represents 'number of product items' inside the order.
                        Consumers are expected to handle the scenario of stopping the end user <u>*when stock value is 0*</u>
                      example: 63
  /orders:
    post:
      summary: Create Order
      description: |
        Post order details to EasyShop for processing and shipping
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      name:
                        type: string
                      price:
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zipcode:
                      type: string
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
    put:
      summary: Update Order
      description: |
        Update order details to EasyShop for processing and shipping
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      name:
                        type: string
                      price:
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                        description: |
                          ***Quantity*** represents 'stock' value when this field is being sent by EasyShop. Where as in the
                          scenarios of consumer sending this field. it represents 'number of product items' inside the order.
                          Consumers are expected to handle the scenario of stopping the end user <u>*when stock value is 0*</u>
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zipcode:
                      type: string
      responses:
        '200':
          description: Order details updated successfully
    delete:
      summary: Delete Order
      description: Delete Order details from EasyShop
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Order details deleted successfully
    get:
      summary: Get Order details
      description: |
        Get order details from the EasyShop
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Fetch order details successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        categoryName:
                          type: string
                        quantity:
                          type: integer
                          description: |
                            ***Quantity*** represents 'stock' value when this field is being sent by EasyShop. Where as in the
                            scenarios of consumer sending this field. it represents 'number of product items' inside the order.
                            Consumers are expected to handle the scenario of stopping the end user <u>*when stock value is 0*</u>
                  address:
                    type: object
                    properties:
                      addressLine:
                        type: string
                      city:
                        type: string
                      state:
                        type: string
                      zipcode:
                        type: string

